@model Loony.Web.Models.ModelViewModel

@{
    ViewData["Title"] = await Component.StaticText("Models");
}

<!-- BEGIN: Subheader -->
<div class="m-subheader ">
    <div class="d-flex align-items-center">
        <div class="mr-auto">
            <h3 class="m-subheader__title m-subheader__title--separator">@await Component.StaticText("ModelDetails")</h3>
            <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                <li class="m-nav__item m-nav__item--home">
                    <a asp-controller="Home" asp-action="Index" class="m-nav__link m-nav__link--icon">
                        <i class="m-nav__link-icon la la-home"></i>
                    </a>
                </li>
                <li class="m-nav__separator">-</li>
                <li class="m-nav__item">
                    <a asp-controller="Model" asp-action="Index" class="m-nav__link">
                        <span class="m-nav__link-text">@await Component.StaticText("Models")</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>
<!-- END: Subheader -->

<div class="m-content">
    @if (!String.IsNullOrEmpty(TempData["Message"]?.ToString()))
    {
        <message id="SaveMessage">@await Component.StaticText(TempData["Message"]?.ToString())</message>
    }
    <div class="row">
        <div class="col-lg-4">
            <div class="m-portlet m-portlet--full-height  ">
                <div class="m-portlet__body">
                    <div class="m-card-profile">
                        <div class="m-card-profile__title m--hide">
                            @await Component.StaticText("ModelDetails")
                        </div>
                        <div>
                            <img src="~/Home/Image?id=@Model.Id&table=Product.Model" class="m--marginless m--img-centered img-responsive" style="max-width: 100%; border-style: solid; border-color: lightgray; border-width: 1px;" />
                        </div>
                    </div>
                    <ul class="m-nav m-nav--hover-bg m-portlet-fit--sides">
                        <li class="m-nav__item">
                            <span class="m-nav__link">
                                <i class="m-nav__link-icon flaticon-calendar-3"></i>
                                <span class="m-nav__link-text">
                                    @await Component.StaticText("CreatedBy"),

                                    @await Component.UserInfo(Model.ProductModel.CreatedBy, "FullName")
                                    <small>(@Model.ProductModel.CreationDate.Value.ToString("dd MMMM yyyy"))</small>
                                </span>
                            </span>
                            <span class="m-nav__link">
                                <i class="m-nav__link-icon flaticon-calendar-3"></i>
                                <span class="m-nav__link-text">
                                    @await Component.StaticText("ModifiedBy"),

                                    @await Component.UserInfo(Model.ProductModel.ModifiedBy, "FullName")
                                    <small>(@Model.ProductModel.ModificationDate.Value.ToString("dd MMMM yyyy"))</small>
                                </span>
                            </span>
                        </li>
                        <li class="m-nav__separator m-nav__separator--fit"></li>
                        <li class="m-nav__item">
                            @if (Convert.ToBoolean(Context.Items["Delete"]))
                            {
                                <a asp-action="Delete" asp-route-id="@Model.Id" onclick="return confirm('@await Component.StaticText("msgDelete")');" class="m-nav__link">
                                    <i class="m-nav__link-icon flaticon-close"></i>
                                    <span class="m-nav__link-text">@await Component.StaticText("DeleteModel")</span>
                                </a>
                            }
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="m-portlet m-portlet--full-height">
                <form class="m-form m-form--fit m-form--label-align-right" asp-action="Edit" enctype="multipart/form-data" method="post">
                    <div class="m-portlet__body">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="ProductModel.Id" />

                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("ModelName")</label>
                            <div class="col-7">
                                <input type="text" asp-for="ProductModel.ModelName" class="form-control m-input">
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("ModelCode")</label>
                            <div class="col-7">
                                <input type="text" asp-for="ProductModel.ModelCode" class="form-control m-input">
                                <span asp-validation-for="ProductModel.ModelCode" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("Year")</label>
                            <div class="col-7">
                                <input type="text" asp-for="ProductModel.Year" class="form-control m-input">
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("Season")</label>
                            <div class="col-7">
                                <select asp-for="ProductModel.Season" class="form-control kt-selectpicker">
                                    <option value="SS">SS - Spring/Summer</option>
                                    <option value="FW">FW - Fall/Winter</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("ModelGroup")</label>
                            <div class="col-7">
                                <select asp-for="ProductModel.ModelGroupId" asp-items="Model.ModelGroupSelectList" class="form-control m-input">
                                    <option value="">@await Component.StaticText("PleaseSelect")</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("Tags")</label>
                            <div class="col-7">
                                <select class="form-control m-select2" name="tags[]" asp-items="Model.TagSelectList" id="m_Tag" multiple></select>
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("Description")</label>
                            <div class="col-7">
                                <textarea asp-for="ProductModel.Description" class="form-control m-input" rows="3" cols="60"></textarea>
                            </div>
                        </div>
                        <div class="m-form__seperator m-form__seperator--dashed m-form__seperator--space-2x"></div>
                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("ModelImage")</label>
                            <div class="col-7">
                                <div class="custom-file">
                                    <input type="file" name="file" class="custom-file-input" id="customFile">
                                    <label class="custom-file-label" for="customFile">@await Component.StaticText("ChooseFile")</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-portlet__foot m-portlet__foot--fit">
                        <div class="m-form__actions">
                            <div class="row">
                                <div class="col-2">
                                </div>
                                <div class="col-7">
                                    @if (Convert.ToBoolean(Context.Items["Update"]))
                                    {
                                        <button type="submit" class="btn btn-accent m-btn m-btn--air m-btn--custom">@await Component.StaticText("SaveChanges")</button>
                                    }
                                        &nbsp; &nbsp;
                                        <a asp-action="Index" class="btn btn-secondary m-btn m-btn--air m-btn--custom">@await Component.StaticText("Cancel")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles{
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @if (TempData["Message"] != null)
    {
        <script>$(function () {
                setTimeout(() => {
                    $('#SaveMessage').hide();
                }, 2000);
            });</script>
    }

    <script>$('#modal').on('show.bs.modal', function (e) {
            $(this).find('.modal-content').load($(e.relatedTarget).data('remote'));
        });

        $('body').on('hidden.bs.modal', '.modal:not(.modal-cached)', function () {
            $(this).removeData('bs.modal');
        });
    </script>

    <script>

        var Select2 = function () {
            var tags = function () {

                $("#m_Tag").select2({
                    placeholder: " Search for tags",
                    tags: true,
                    allowClear: true,
                    ajax: {
                        url: "@Url.Action("Tags")",
                        dataType: 'json',
                        delay: 250,
                        data: function (params) {
                            return {
                                search: params.term
                            };
                        },
                        processResults: function (data, params) {
                            return {
                                results: data.items
                            };
                        },
                        cache: true
                    },
                    escapeMarkup: function (markup) {
                        return markup;
                    },
                    minimumInputLength: 1,
                });

            }

            return {
                init: function () {
                    tags();
                }
            };
        }();

        jQuery(document).ready(function () {
            Select2.init();
        });

    </script>


}
