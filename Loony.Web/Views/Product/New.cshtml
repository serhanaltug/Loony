@model Loony.Web.Models.ProductViewModel

@{
    ViewData["Title"] = await Component.StaticText("Products");
}

<!-- BEGIN: Subheader -->
<div class="m-subheader ">
    <div class="d-flex align-items-center">
        <div class="mr-auto">
            <h3 class="m-subheader__title m-subheader__title--separator">@await Component.StaticText("NewProduct")</h3>
            <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                <li class="m-nav__item m-nav__item--home">
                    <a asp-controller="Home" asp-action="Index" class="m-nav__link m-nav__link--icon">
                        <i class="m-nav__link-icon la la-home"></i>
                    </a>
                </li>
                <li class="m-nav__separator">-</li>
                <li class="m-nav__item">
                    <a asp-controller="Product" asp-action="Index" class="m-nav__link">
                        <span class="m-nav__link-text">@await Component.StaticText("Products")</span>
                    </a>
                </li>
            </ul>

        </div>
        <div></div>
    </div>
</div>
<!-- END: Subheader -->

<div class="m-content">
    <div class="row">
        <div class="col-md-12">
            <!--begin::Portlet-->
            <div class="m-portlet">
                <!--begin::Form-->
                <form class="m-form" asp-action="New">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="m-portlet__body">
                        <div class="m-form__section m-form__section--first">
                            <div class="form-group m-form__group row">
                                <label class="col-lg-3 col-form-label">@await Component.StaticText("ProductName")</label>
                                <div class="col-lg-6">
                                    <input type="text" asp-for="Product.ProductName" class="form-control m-input">
                                </div>
                            </div>
                            <div class="form-group m-form__group row">
                                <label class="col-lg-3 col-form-label">@await Component.StaticText("ProductCode")</label>
                                <div class="col-lg-6">
                                    <input type="text" asp-for="Product.ProductCode" class="form-control m-input">
                                    <span asp-validation-for="Product.ProductCode" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group m-form__group row">
                                <label class="col-lg-3 col-form-label">@await Component.StaticText("Year")</label>
                                <div class="col-lg-6">
                                    <input type="text" asp-for="Product.Year" class="form-control m-input">
                                </div>
                            </div>
                            <div class="form-group m-form__group row">
                                <label class="col-3 col-form-label">@await Component.StaticText("Season")</label>
                                <div class="col-6">
                                    <select asp-for="Product.Season" class="form-control kt-selectpicker">
                                        <option value="Summer">Summer</option>
                                        <option value="Winter">Winter</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group m-form__group row">
                                <label class="col-3 col-form-label">@await Component.StaticText("ProductGroup")</label>
                                <div class="col-6">
                                    <select asp-for="Product.ProductGroupId" asp-items="Model.ProductGroupSelectList" class="form-control m-input">
                                        <option value="">@await Component.StaticText("PleaseSelect")</option>
                                    </select>
                                </div>
                            </div>
                            <div class="m-form__seperator m-form__seperator--dashed m-form__seperator--space-2x"></div>
                            <div class="form-group m-form__group row">
                                <label class="col-3 col-form-label">@await Component.StaticText("Description")</label>
                                <div class="col-6">
                                    <textarea asp-for="Product.Description" class="form-control m-input" rows="3" cols="60"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-portlet__foot m-portlet__foot--fit">
                        <div class="m-form__actions m-form__actions">
                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-lg-6">
                                    @if (Convert.ToBoolean(Context.Items["Create"]))
                                    {
                                        <button type="submit" class="btn btn-accent m-btn m-btn--air m-btn--custom">@await Component.StaticText("SaveChanges")</button>
                                    }
                                        &nbsp; &nbsp;
                                        <a asp-action="Index" class="btn btn-secondary m-btn m-btn--air m-btn--custom">@await Component.StaticText("Cancel")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>

                <!--end::Form-->
            </div>

            <!--end::Portlet-->
        </div>
    </div>
</div>

@section Styles{
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
