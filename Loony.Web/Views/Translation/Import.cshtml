@{
    ViewData["Title"] = await Component.StaticText("ImportFromFile");
}

<!-- BEGIN: Subheader -->
<div class="m-subheader ">
    <div class="d-flex align-items-center">
        <div class="mr-auto">
            <h3 class="m-subheader__title ">@await Component.StaticText("ImportFromFile")</h3>
        </div>
    </div>
</div>
<!-- END: Subheader -->

<div class="m-content">

    @if (!String.IsNullOrEmpty(TempData["Message"]?.ToString()))
    {
        <message>@await Component.StaticText(TempData["Message"]?.ToString())</message>
    }

    <div class="row">
        <div class="col-lg-12">
            <div class="m-portlet m-portlet--full-height">
                <form class="m-form m-form--fit m-form--label-align-right" enctype="multipart/form-data" method="post">
                    <div class="m-portlet__body">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group m-form__group row">
                            <div class="col-10 offset-1">

                                <div class="m-alert m-alert--icon m-alert--outline alert alert-primary" role="alert">
                                    <div class="m-alert__icon">
                                        <i class="la la-warning"></i>
                                    </div>
                                    <div class="m-alert__text">
                                        <strong>@await Component.StaticText("msgImportTitle")</strong>
                                        <p>@await Component.StaticText("msgImportDescription")</p>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-2 col-form-label">@await Component.StaticText("File")</label>
                            <div class="col-7">
                                <div class="custom-file">
                                    <input type="file" name="file" class="custom-file-input" id="customFile">
                                    <label class="custom-file-label" for="customFile">@await Component.StaticText("ChooseFile")</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-portlet__foot m-portlet__foot--fit">
                        <div class="m-form__actions">
                            <div class="row">
                                <div class="col-2">
                                </div>
                                <div class="col-7">
                                    <button type="submit" class="btn btn-accent m-btn m-btn--air m-btn--custom">@await Component.StaticText("Upload")</button>&nbsp;&nbsp;
                                    <a asp-action="Index" class="btn btn-secondary m-btn m-btn--air m-btn--custom">@await Component.StaticText("Cancel")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @if (ViewBag.Translations != null)
    {
        <div>
            <table>
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Key</th>
                        <th>EN</th>
                        <th>TR</th>
                        <th>Type</th>
                        <th>Group</th>
                    </tr>
                </thead>
                @foreach (var item in (List<Loony.Data.Entities.System.Translation>)ViewBag.Translations)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Key</td>
                        <td>@item.EN</td>
                        <td>@item.TR</td>
                        <td>@item.Type</td>
                        <td>@item.Group</td>
                    </tr>
                }
            </table>
        </div>
    }

</div>

@section Styles{
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
